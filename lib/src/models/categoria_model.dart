// Generated by https://quicktype.io

class Categorias{
  List<Categoria> listaCat = new List();
  Categoria itemCategoria = new Categoria();
  Categorias();

  Categorias.fromJsonList(List<dynamic> jsonList){

    if (jsonList == null) return;

    for (var item in jsonList) {
      //si una categoria no tiene imagen no la muestra
      if(item['image'] != null){
        itemCategoria = Categoria.fromJSonList(item);
        listaCat.add(itemCategoria);
      } 
    }
  }

}


class Categoria {
  int id;
  String name;
  String slug;
  int parent;
  String description;
  String display;
  ImageClass image;
  int menuOrder;
  int count;
  Links links;

  Categoria({
    this.id,
    this.name,
    this.slug,
    this.parent,
    this.description,
    this.display,
    this.image,
    this.menuOrder,
    this.count,
    this.links,
  });

  Categoria.fromJSonList(Map<String,dynamic> jsonCat){
    this.id          = jsonCat['id'];
    this.name        = jsonCat['name'];
    this.slug        = jsonCat['slug'];
    this.parent      = jsonCat['parent'];
    this.description = jsonCat['description'];
    this.display     = jsonCat['display'];
    //this.image       = ImageClass.fromJsonMap(jsonCat['image']);

    if(jsonCat['image']!=null){
      this.image       = ImageClass.fromJsonMap(jsonCat['image']);
    }else{
      this.image = null;
    }

    this.menuOrder   = jsonCat['menu_order'];
    this.count       = jsonCat['count'];
    this.links       = Links.fromJsonList(jsonCat['_links']);
  }

  getPosterCategoria(){
  if(this.image.src == null){
    return '';
  }else{
    return this.image.src;
  }

}
}

class ImageClass {
  int id;
  String dateCreated;
  String dateCreatedGmt;
  String dateModified;
  String dateModifiedGmt;
  String src;
  String name;
  String alt;

  ImageClass({
    this.id,
    this.dateCreated,
    this.dateCreatedGmt,
    this.dateModified,
    this.dateModifiedGmt,
    this.src,
    this.name,
    this.alt,
  });

  ImageClass.fromJsonMap(Map<String,dynamic> jsonImage){
    this.id = jsonImage['id'];
    this.dateCreated = jsonImage['date_created'];
    this.dateCreatedGmt = jsonImage['date_created_gmt'];
    this.dateModified = jsonImage['date_modified'];
    this.dateModifiedGmt = jsonImage['date_modified_gmt'];
    this.src = jsonImage['src'];
    this.name = jsonImage['name'];
    this.alt = jsonImage['alt'];
  }

  
}





class Links {
  List<Collection> self;
  List<Collection> collection;
  List<Collection> up;

  Links({
    this.self,
    this.collection,
    this.up,
  });

  Links.fromJsonList(Map<String,dynamic> jsonMapElement){
    if(jsonMapElement['self'] != null){
        var listSelf = jsonMapElement['self'] as List;
        this.self = listSelf.map((e) => Collection.fromJsonMap(e)).toList();
    }else{
        this.self = [];
    }

    if(jsonMapElement['collection'] != null){
        var listCollection = jsonMapElement['collection'] as List;
        this.collection = listCollection.map((e) => Collection.fromJsonMap(e)).toList();
    }else{
        this.collection = [];
    }

    if(jsonMapElement['up'] != null){
        var listUp = jsonMapElement['up'] as List;

        this.up = listUp.map((e) => Collection.fromJsonMap(e)).toList();
    }else{
        this.up = [];
    }


  }
}

class Collection {
  String href;

  Collection({
    this.href,
  });

  Collection.fromJsonMap(Map<String,dynamic> jsonHref){
    this.href = jsonHref['href'];
  }
  
}
